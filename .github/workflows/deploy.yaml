name: Deploy with Terraform
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          if [ ${{ github.ref }} == 'refs/heads/main' ]; then
            export BRANCH=STAGING
          elif [[ "${{ github.ref }}" == "refs/tags/release-"* ]]; then
            export BRANCH=PROD
          else
            export BRANCH=DEV
          fi
          export AWS_ECR_REGISTRY: ${{ env[env.BRANCH + '_AWS_ECR_REGISTRY'] }}
          export FUNCTION_NAME: ${{ env[env.BRANCH + '_FUNCTION_NAME'] }}
          export BASE_URL: ${{ env[env.BRANCH + '_BASE_URL'] }}
          export FROM: ${{ env[env.BRANCH + '_FROM'] }}
          export NO_OF_POSTS_SENT_TO_USERS: ${{ env[env.BRANCH + '_NO_OF_POSTS_SENT_TO_USERS'] }}
          export OPENAI_API_KEY: ${{ env[env.BRANCH + '_OPENAI_API_KEY'] }}
          export SENDGRID_API_KEY: ${{ env[env.BRANCH + '_SENDGRID_API_KEY'] }}
          export SYNC_HOURS: ${{ env[env.BRANCH + '_SYNC_HOURS'] }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.AWS_ECR_REGISTRY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Build Docker image
        run: docker build -t ${{ env.FUNCTION_NAME }} .
      - name: Tag Docker image
        run: docker tag ${{ env.FUNCTION_NAME }}:latest ${{ env.AWS_ECR_REGISTRY }}/${{ env.FUNCTION_NAME }}:latest
      - name: Upload Docker image to AWS ECR
        run: docker push ${{ env.AWS_ECR_REGISTRY }}/${{ env.FUNCTION_NAME }}:latest
        needs: Login to AWS ECR
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.1.2"
        needs: Upload Docker image to AWS ECR
      - name: Terraform init
        run: terraform init
        needs: Set up Terraform
      - name: Terraform plan
        run: terraform plan -out=tfplan
        needs: Terraform init
      - name: Terraform apply
        run: terraform apply tfplan
        needs: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
