name: Deploy with Terraform
on:
  push:
    branches-ignore:
      - main
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FUNCTION_NAME: ${{ vars.FUNCTION_NAME_DEV }}
      BASE_URL: ${{ vars.BASE_URL_DEV }}
      FROM: ${{ vars.FROM_DEV }}
      NO_OF_POSTS_SENT_TO_USERS: ${{ vars.NO_OF_POSTS_SENT_TO_USERS_DEV }}
      OPENAI_API_KEY: ${{ vars.OPENAI_API_KEY }}
      SENDGRID_API_KEY: ${{ vars. SENDGRID_API_KEY }}
      SYNC_HOURS: ${{ vars.SYNC_HOURS }}
      AWS_ECR_REGISTRY: ${{ vars.AWS_ECR_REGISTRY }}
    steps:
      - name: Environment variables set
        run: |
          echo FUNCTION_NAME: $FUNCTION_NAME
          echo BASE_URL: $BASE_URL
          echo FROM: $FROM
          echo NO_OF_POSTS_SENT_TO_USERS: $NO_OF_POSTS_SENT_TO_USERS
          echo OPENAI_API_KEY: $OPENAI_API_KEY
          echo SENDGRID_API_KEY: $SENDGRID_API_KEY
          echo SYNC_HOURS: $SYNC_HOURS
          echo AWS_ECR_REGISTRY: $AWS_ECR_REGISTRY
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker image
        run: docker build -t ${{ env.FUNCTION_NAME }} .
      - name: Tag Docker image
        run: docker tag ${{ env.FUNCTION_NAME }}:latest ${{ env.AWS_ECR_REGISTRY }}/${{ env.FUNCTION_NAME }}:latest
      - name: Upload Docker image to AWS ECR
        run: docker push ${{ env.AWS_ECR_REGISTRY }}/${{ env.FUNCTION_NAME }}:latest
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install CDK dependencies
        run: npm ci
      - name: Deploy CDK stack
        run: npx cdk deploy STACK_NAME --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2